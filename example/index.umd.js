/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["$"] = factory();
	else
		root["$"] = factory();
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/constants/Constants.js":
/*!************************************!*\
  !*** ./src/constants/Constants.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst uV = {\n  min: -500,\n  max: 1500,\n  deltaMain: 500,\n  deltaSecondary: 100\n};\nconst mV = {\n  min: -0.5,\n  max: 1.5,\n  deltaMain: 0.5,\n  deltaSecondary: 0.1\n};\nconst mmHg = {\n  min: 0,\n  max: 200,\n  deltaMain: 100,\n  deltaSecondary: 20\n};\nconst SOP_CLASS_UIDS = {\n  Sop12LeadECGWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.1.1',\n  //YEs\n  GeneralECGWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.1.2',\n  //YES\n  AmbulatoryECGWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.1.3',\n  //NO\n  HemodynamicWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.2.1' //YES\n\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  uV,\n  mV,\n  mmHg,\n  SOP_CLASS_UIDS\n});\n\n//# sourceURL=webpack://$/./src/constants/Constants.js?");

/***/ }),

/***/ "./src/draw/DrawECGCanvas.js":
/*!***********************************!*\
  !*** ./src/draw/DrawECGCanvas.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _GenericCanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GenericCanvas */ \"./src/draw/GenericCanvas.js\");\n\n/**\r\n * Draw line of ECG in canvas.\r\n */\n\nclass DrawECGCanvas extends _GenericCanvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(id_canvas, dataMg) {\n    super(id_canvas, dataMg);\n  }\n  /**\r\n   * Draw curve with specified data\r\n   */\n\n\n  drawCurve(data) {\n    let i = 0;\n    let dt = null;\n    let p0 = null;\n    let p1 = null;\n    let cs = this.getCellSize();\n    let sr = this.getSamplingRate();\n    let lw = this.ctx.lineWidth;\n    let ss = this.ctx.strokeStyle;\n    let delta = cs / (0.04 * sr);\n    let height = this.getHeight();\n    let period = this.getPeriod();\n    this.clear();\n    this.drawGrid();\n    this.ctx.strokeStyle = this.configuration.LINE_COLOR;\n    this.ctx.translate(0, height);\n\n    while (i < data.length) {\n      if (p0 = data[i++]) break;\n    }\n\n    p0.offset = (i - 1) * delta;\n\n    while (i < data.length) {\n      p1 = data[i];\n      p1.offset = i * delta;\n      this.ctx.beginPath();\n      this.ctx.lineWidth = this.configuration.CURVE_WIDTH;\n      this.drawLine(p0.offset, -p0.pqrst, p1.offset, -p1.pqrst);\n      this.ctx.closePath();\n      this.ctx.stroke();\n      p0 = p1;\n      i++;\n    }\n\n    this.ctx.lineWidth = lw;\n    this.ctx.strokeStyle = ss;\n    this.ctx.translate(0, -height);\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DrawECGCanvas);\n\n//# sourceURL=webpack://$/./src/draw/DrawECGCanvas.js?");

/***/ }),

/***/ "./src/draw/DrawGridCanvas.js":
/*!************************************!*\
  !*** ./src/draw/DrawGridCanvas.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _DrawECGCanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DrawECGCanvas */ \"./src/draw/DrawECGCanvas.js\");\n/* harmony import */ var _GenericCanvas__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GenericCanvas */ \"./src/draw/GenericCanvas.js\");\n\n\n/**\r\n * Draw grid canvas template.\r\n */\n\nclass DrawGridCanvas extends _GenericCanvas__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n  constructor(id_canvas, dataMg) {\n    super(id_canvas, dataMg);\n  }\n  /**\r\n   * Draw the grid\r\n   */\n\n\n  drawGrid() {\n    let w = this.getWidth() - 1;\n    let h = this.getHeight() - 1;\n    let bs = this.getBlockSize();\n    let cs = this.getCellSize();\n    let lw = this.ctx.lineWidth;\n    let ss = this.ctx.strokeStyle;\n    this.ctx.strokeStyle = this.configuration.GRID_COLOR;\n\n    for (var y = h; y >= this.configuration.START_GRID; y -= cs) {\n      this.ctx.beginPath();\n      this.ctx.lineWidth = (h - y) % bs ? this.configuration.CELL_WIDTH : this.configuration.BLOCK_WIDTH;\n      this.drawLine(0, y, w, y);\n      this.ctx.closePath();\n      this.ctx.stroke();\n    }\n\n    for (var x = 0; x <= w; x += cs) {\n      this.ctx.beginPath();\n      this.ctx.lineWidth = x % bs ? this.configuration.CELL_WIDTH : this.configuration.BLOCK_WIDTH;\n      this.drawLine(x, this.configuration.START_GRID, x, h);\n      this.ctx.closePath();\n      this.ctx.stroke();\n    }\n\n    this.ctx.lineWidth = lw;\n    this.ctx.strokeStyle = ss; //Load user data:\n\n    this.loadUserData(); //Draw indicators:\n\n    this.drawECGIndicators();\n  }\n  /**\r\n   * Load view no compatible:\r\n   */\n\n\n  drawNoCompatible() {\n    this.ctx.font = \"3rem Arial\";\n    this.ctx.fillText(\"ECG NO COMPATIBLE\", this.canvas.width / 2, this.canvas.height / 2);\n  } //Draw I, II, III, aVR, aVL, aVF, V1, V2, V3, V4, V5, V6\n\n\n  drawECGIndicators() {\n    let h = this.canvas.height - this.configuration.START_GRID;\n    let gridWidth = this.canvas.width / this.configuration.COLUMS;\n    let gridHeight = h / this.configuration.ROWS; //Default margin text width:\n\n    let width = 10; //COLUMNS:\n\n    for (let e = 0; e < this.configuration.COLUMS; e++) {\n      let middleHeight = gridHeight / 2 + this.configuration.START_GRID; //ROWS:\n\n      for (let i = 0; i < this.configuration.ROWS; i++) {\n        this.ctx.font = \"1rem Arial\";\n        this.ctx.fillText(this.configuration.columsText[e][i], width, middleHeight);\n        middleHeight += gridHeight;\n      }\n\n      width += gridWidth;\n    }\n  }\n  /**\r\n   * Load user data information in range y: 0 to 100.\r\n   */\n\n\n  loadUserData() {\n    //Draw line user:\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.canvas.width, this.configuration.START_GRID);\n    this.ctx.lineTo(0, this.configuration.START_GRID);\n    this.ctx.moveTo(this.canvas.width, 1);\n    this.ctx.lineTo(1, 1);\n    this.ctx.moveTo(1, this.configuration.START_GRID);\n    this.ctx.lineTo(1, 1);\n    this.ctx.moveTo(this.canvas.width - 1, 0);\n    this.ctx.lineTo(this.canvas.width - 1, this.configuration.START_GRID);\n    this.ctx.stroke(); //Data user:\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DrawGridCanvas);\n\n//# sourceURL=webpack://$/./src/draw/DrawGridCanvas.js?");

/***/ }),

/***/ "./src/draw/GenericCanvas.js":
/*!***********************************!*\
  !*** ./src/draw/GenericCanvas.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\r\n * Generic class canvas.\r\n */\nclass GenericCanvas {\n  constructor(id_canvas, dataMg) {\n    this.dataMg = dataMg;\n    this.canvas = document.getElementById(id_canvas);\n    this.ctx = this.canvas.getContext(\"2d\"); //Configurantion:\n\n    this.configuration = {\n      CELL_WIDTH: 0.1,\n      //The stroke width of cell\n      CELL_SIZE: 6,\n      //The cell size\n      BLOCK_WIDTH: 0.2,\n      //The stroke width of block\n      BLOCK_SIZE: 0,\n      //CELL_SIZE * 5, //The block size, each block includes 5*5 cells\n      CURVE_WIDTH: 1,\n      //The stroke width of curve\n      SAMPLING_RATE: 125,\n      //The number of samples per second (1/0.008)\n      FREQUENCY: 250,\n      //The frequency to update the curve\n      GRID_COLOR: \"#F08080\",\n      LINE_COLOR: \"#000033\",\n      BACKGROUND_COLOR: \"#F9F8F2\",\n      START_GRID: 100,\n      //Start grid draw.\n      //ROWS and COLUMS canvas separation I, II, III, aVR, aVL, aVF, V1, V2, V3, V4, V5, V6\n      ROWS: 6,\n      COLUMS: 2,\n      columsText: [[\"I\", \"II\", \"III\", \"aVR\", \"aVL\", \"aVF\"], //Colum 1\n      [\"V1\", \"V2\", \"V3\", \"V4\", \"V5\", \"V6\"] // Colum 2\n      ]\n    }; //Canvas resize:\n\n    this.canvas.width = window.innerWidth;\n    this.canvas.height = window.innerHeight; //Color canvas:\n\n    this.canvas.style.backgroundColor = this.configuration.BACKGROUND_COLOR;\n    this.configuration.BLOCK_SIZE = this.configuration.CELL_SIZE * 5; //Frequency data dcm:\n\n    this.configuration.FREQUENCY = dataMg.samplingFrequency;\n  }\n  /**\r\n   * Draw a line from point (x1, y1) to point (x2, y2)\r\n   */\n\n\n  drawLine(x1, y1, x2, y2) {\n    this.ctx.moveTo(x1, y1);\n    this.ctx.lineTo(x2, y2);\n  } //GET Methods:\n\n  /**\r\n   * Returns the cell size\r\n   *\r\n   * @return the cell size\r\n   */\n\n\n  getCellSize() {\n    return this.configuration.CELL_SIZE;\n  }\n  /**\r\n   * Returns the block size\r\n   *\r\n   * @return the block size\r\n   */\n\n\n  getBlockSize() {\n    return 5 * this.configuration.CELL_SIZE;\n  }\n  /**\r\n   * Returns the number of cells per period\r\n   *\r\n   * @return the number of cells per period\r\n   */\n\n\n  getCellsPerPeriod() {\n    return Math.floor(this.Width() / this.CellSize());\n  }\n  /**\r\n   * Returns the number of samples per cell\r\n   *\r\n   * @return the number of samples per cell\r\n   */\n\n\n  getSamplesPerCell() {\n    return 0.04 * this.SamplingRate();\n  }\n  /**\r\n   * Returns the number of samples per second\r\n   *\r\n   * @return the number of samples per second\r\n   */\n\n\n  getSamplingRate() {\n    return this.configuration.SAMPLING_RATE;\n  }\n  /**\r\n   * Returns the number of samples per period\r\n   *\r\n   * @return the number of samples per period\r\n   */\n\n\n  getSamplesPerPeriod() {\n    return Math.floor(0.04 * this.SamplingRate() * (this.Width() / this.CellSize()));\n  }\n  /**\r\n   * Returns the width of this electrocardiogram\r\n   *\r\n   * @return the width of this electrocardiogram\r\n   */\n\n\n  getWidth() {\n    return this.ctx.canvas.width;\n  }\n  /**\r\n   * Returns the height of this electrocardiogram\r\n   *\r\n   * @return the height of this electrocardiogram\r\n   */\n\n\n  getHeight() {\n    return this.ctx.canvas.height;\n  }\n  /**\r\n   * Returns the period (seconds) of this electrocardiogram\r\n   *\r\n   * @return the period of this electrocardiogram\r\n   */\n\n\n  getPeriod() {\n    return 0.04 * this.Width() / this.CellSize();\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GenericCanvas);\n\n//# sourceURL=webpack://$/./src/draw/GenericCanvas.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Constants\": () => (/* reexport safe */ _constants_Constants__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   \"DicomECGViewer\": () => (/* reexport safe */ _viewer_DicomECGViewer__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   \"ReadECGData\": () => (/* reexport safe */ _utils_ReadECGData__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _utils_ReadECGData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/ReadECGData */ \"./src/utils/ReadECGData.js\");\n/* harmony import */ var _constants_Constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants/Constants */ \"./src/constants/Constants.js\");\n/* harmony import */ var _viewer_DicomECGViewer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./viewer/DicomECGViewer */ \"./src/viewer/DicomECGViewer.js\");\n\n\n\n\n\n//# sourceURL=webpack://$/./src/index.js?");

/***/ }),

/***/ "./src/utils/ReadECGData.js":
/*!**********************************!*\
  !*** ./src/utils/ReadECGData.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var dicom_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dicom-parser */ \"./node_modules/dicom-parser/dist/dicomParser.min.js\");\n/* harmony import */ var dicom_parser__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dicom_parser__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\r\n * ReadECGData.\r\n * In base https://dicom.nema.org/medical/dicom/current/output/html/part16.html\r\n */\n\nclass ReadECGData {\n  /**\r\n   * Read the arraydicombuffer and return dataSet.\r\n   * @param {Array Dicom Buffer} dataDICOMarrayBuffer\r\n   * @returns dataSet.\r\n   */\n  static getDataSet(dataDICOMarrayBuffer) {\n    return dicom_parser__WEBPACK_IMPORTED_MODULE_0___default().parseDicom(new Uint8Array(dataDICOMarrayBuffer));\n  }\n  /**\r\n   * Read and return ECG Data.\r\n   * Structure: Waveform - Multiplex - channels - sample\r\n   * @param {DataSet ECG} dataSet\r\n   */\n\n\n  static readData(dataSet) {\n    let mg = {}; // multiplexGroup\n\n    let channelSourceSequence = dataSet.elements.x003a0208;\n\n    if (channelSourceSequence !== undefined) {\n      //console.log('Channel Source Sequence is present');\n      if (channelSourceSequence.items.length > 0) {//console.log(channelSourceSequence);\n      }\n    }\n\n    let waveformSequence = dataSet.elements.x54000100;\n\n    if (waveformSequence !== undefined) {\n      mg.sopClassUID = dataSet.string(\"x00080016\"); //console.log('Waveform data is present');\n\n      if (waveformSequence.items.length > 0) {\n        waveformSequence.items.forEach(function (item) {\n          //console.log('Item tag: ' + item.tag);\n          if (item.tag == \"xfffee000\") {\n            // item start tag\n            // console.log(item);\n            let multiplexGroup = item.dataSet; // console.log(multiplexGroup);\n\n            mg.waveformOriginality = multiplexGroup.string(\"x003a0004\"); // VR = CS\n\n            mg.numberOfWaveformChannels = multiplexGroup.uint16(\"x003a0005\"); // VR = US\n\n            mg.numberOfWaveformSamples = multiplexGroup.uint32(\"x003a0010\"); // VR = UL\n\n            mg.samplingFrequency = multiplexGroup.floatString(\"x003a001a\"); // VR = DS\n\n            mg.multiplexGroupLabel = multiplexGroup.string(\"x003a0020\"); // VR = SH\n            // Initialization of channels\n\n            mg.channels = [];\n            let channelDefinitionSequence = multiplexGroup.elements.x003a0200; // console.log(channelDefinitionSequence);\n\n            let numDefinition = 0;\n\n            if (channelDefinitionSequence !== undefined) {\n              if (channelDefinitionSequence.items.length > 0) {\n                channelDefinitionSequence.items.forEach(function (item) {\n                  if (item.tag == \"xfffee000\") {\n                    // item start tag\n                    // console.log(\"numDefinition: \" + numDefinition);\n                    let channelDefinition = item.dataSet;\n                    let cd = {}; // channelDefinition\n                    // console.log(channelDefinition);\n\n                    cd.channelSource = ReadECGData.readCodeSequence(channelDefinition.elements.x003a0208); // http://stackoverflow.com/questions/12855400/rchannel-sensitivity-in-dicom-waveforms\n\n                    cd.channelSensitivity = channelDefinition.string(\"x003a0210\"); // VR = DS\n\n                    cd.channelSensitivityUnits = ReadECGData.readCodeSequence(channelDefinition.elements.x003a0211);\n                    cd.channelSensitivityCorrectionFactor = channelDefinition.string(\"x003a0212\"); // VR = DS\n\n                    cd.channelBaseline = channelDefinition.string(\"x003a0213\"); // VR = DS\n                    // cd.channelTimeSkew = channelDefinition.string('x003a0214'); // VR = DS\n                    // cd.channelSampleSkew = channelDefinition.string('x003a0215'); // VR = DS\n\n                    cd.waveformBitsStored = channelDefinition.uint16(\"x003a021a\"); // VR = US\n                    // cd.filterLowFrequency = channelDefinition.string('x003a0220'); // VR = DS\n                    // cd.filterHighFrequency = channelDefinition.string('x003a0221'); // VR = DS\n\n                    mg.channels[numDefinition] = {};\n                    mg.channels[numDefinition].channelDefinition = cd;\n                    mg.channels[numDefinition].samples = [];\n                    numDefinition++;\n                  }\n                });\n              }\n            } //console.log(mg);\n\n\n            mg.waveformBitsAllocated = multiplexGroup.uint16(\"x54001004\"); // VR = US\n\n            mg.waveformSampleInterpretation = multiplexGroup.string(\"x54001006\"); // VR = CS\n\n            let waveformPaddingValue;\n            let waveformData;\n\n            switch (mg.waveformBitsAllocated) {\n              case 8:\n                switch (mg.waveformSampleInterpretation) {\n                  case \"SB\": // signed 8 bit linear\n\n                  case \"UB\": // unsigned 8 bit linear\n\n                  case \"MB\": // 8 bit mu-law (in accordance with ITU-T Recommendation G.711)\n\n                  case \"AB\": // 8 bit A-law (in accordance with ITU-T Recommendation G.711)\n\n                  default:\n                    // VR = OB\n                    waveformPaddingValue = multiplexGroup.string(\"x5400100a\");\n                    waveformData = multiplexGroup.string(\"x54001010\");\n                  // VR = OB or OW (OB)\n                }\n\n                break;\n\n              case 16:\n                switch (mg.waveformSampleInterpretation) {\n                  case \"SS\":\n                    // signed 16 bit linear\n                    waveformPaddingValue = multiplexGroup.int16(\"x5400100a\"); // VR = OB or OW (OW->SS)\n\n                    waveformData = multiplexGroup.string(\"x54001010\"); // VR = OB or OW\n\n                    var sampleOffset = multiplexGroup.elements.x54001010.dataOffset; //var sampleSize = multiplexGroup.elements.x54001010.length / 2; // 16 bit!\n\n                    var sampleSize = mg.numberOfWaveformSamples * mg.numberOfWaveformChannels;\n                    /*console.log(\r\n                        'sampleOffset: ' +\r\n                          sampleOffset +\r\n                          ', sampleSize: ' +\r\n                          sampleSize\r\n                      );*/\n\n                    var sampleData = new Int16Array(dataSet.byteArray.buffer, sampleOffset, sampleSize);\n                    var pos = 0; // 10 mm/mV is a rather standard value for ECG\n\n                    for (let numSample = 0; numSample < mg.numberOfWaveformSamples; numSample++) {\n                      for (let numChannel = 0; numChannel < mg.numberOfWaveformChannels; numChannel++) {\n                        // mg.channels[numChannel].samples.push(sampleData[pos] * mg.channels[numChannel].channelDefinition.channelSensitivity);\n                        mg.channels[numChannel].samples.push(sampleData[pos]);\n                        pos++; // sample = dataSet.byteArray, offset, ...\n                      }\n                    } //console.log('Multiplex samples have been read');\n\n\n                    break;\n\n                  case \"US\":\n                    // unsigned 16 bit linear\n                    waveformPaddingValue = multiplexGroup.uint16(\"x5400100a\"); // VR = OB or OW (OW->US)\n\n                    waveformData = multiplexGroup.string(\"x54001010\"); // VR = OB or OW\n\n                    break;\n\n                  default: //console.log(mg.waveformSampleInterpretation);\n                  // throw\n\n                }\n\n                break;\n\n              default: // throw\n\n            }\n            /*\r\n              console.log('waveformBitsAllocated: ' + mg.waveformBitsAllocated);\r\n              console.log(\r\n                'waveformSampleInterpretation: ' + mg.waveformSampleInterpretation\r\n              );\r\n              console.log('waveformPaddingValue: ' + waveformPaddingValue); // ToDo...\r\n              */\n\n            /**\r\n             * Channel Sensitivity: Nominal numeric value of unit quantity of sample. Required if samples represent defined (not arbitrary) units.\r\n             * Channel Sensitivity Units Sequence: A coded descriptor of the Units of measure for the Channel Sensitivity.\r\n             * Channel Sensitivity Correction Factor: Multiplier to be applied to encoded sample values to match units specified in Channel Sensitivity\r\n             * Channel Baseline: Offset of encoded sample value 0 from actual 0 using the units defined in the Channel Sensitivity Units Sequence\r\n             */\n\n\n            let adjValue;\n\n            for (let numChannel = 0; numChannel < mg.numberOfWaveformChannels; numChannel++) {\n              let channel = mg.channels[numChannel];\n              let baseline = Number(channel.channelDefinition.channelBaseline);\n              let sensitivity = Number(channel.channelDefinition.channelSensitivity);\n              let sensitivityCorrectionFactor = Number(channel.channelDefinition.channelSensitivityCorrectionFactor); // ATM: Units hardcoded as uV. ToDo: Change this!\n              // var units = channel.channelDefinition.channelSensitivityUnits.codeValue;\n\n              for (let numSample = 0; numSample < mg.numberOfWaveformSamples; numSample++) {\n                adjValue = baseline + channel.samples[numSample] * sensitivity * sensitivityCorrectionFactor;\n                channel.samples[numSample] = adjValue;\n              }\n            }\n          }\n        });\n      }\n    }\n\n    return mg;\n  }\n  /**\r\n   * Helper function to read sequences of coded elements, like:\r\n   * - Channel Source Sequence (003A,0208)\r\n   * - Channel Sensitivity Units Sequence (003A,0211)\r\n   */\n\n\n  static readCodeSequence(codeSequence) {\n    let code = {};\n\n    if (codeSequence !== undefined) {\n      if (codeSequence.items.length > 0) {\n        let codeDataset = codeSequence.items[0].dataSet; //console.log(codeDataset);\n\n        code.codeValue = codeDataset.string(\"x00080100\"); // VR = SH\n\n        code.codingSchemeDesignator = codeDataset.string(\"x00080102\"); // VR = SH\n\n        code.codingSchemeVersion = codeDataset.string(\"x00080103\"); // VR = SH\n\n        code.codeMeaning = codeDataset.string(\"x00080104\"); // VR = LO\n      }\n    }\n\n    return code;\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ReadECGData);\n\n//# sourceURL=webpack://$/./src/utils/ReadECGData.js?");

/***/ }),

/***/ "./src/viewer/DicomECGViewer.js":
/*!**************************************!*\
  !*** ./src/viewer/DicomECGViewer.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _constants_Constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/Constants */ \"./src/constants/Constants.js\");\n/* harmony import */ var _utils_ReadECGData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/ReadECGData */ \"./src/utils/ReadECGData.js\");\n/* harmony import */ var _draw_DrawGridCanvas__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../draw/DrawGridCanvas */ \"./src/draw/DrawGridCanvas.js\");\n\n\n\n\nclass DicomECGViewer {\n  /**\r\n   * Create Viwer\r\n   * @param {*} dataDICOMarrayBuffer DICOM DCM ECG Array Buffer.\r\n   * @param {*} idView Draw ID View.\r\n   * @param {*} patientData Patient Data, default null: patientData = { NAME: name, PATIENT_ID: id, BIRTH: birth, SEX:sex, DATE:date, DESCRIPTION: description }\r\n   * @param {*} nameView Identifier of the view you want to put, in case you have several views, default 0.\r\n   */\n  constructor(dataDICOMarrayBuffer, idView, patientData = null, nameView = \"0\") {\n    this.dataDICOMarrayBuffer = dataDICOMarrayBuffer;\n    this.idView = idView;\n    this.nameView = nameView;\n    this.patientData = patientData;\n  }\n  /**\r\n  * Load canva data.\r\n  */\n\n\n  loadCanvas() {\n    try {\n      //Load DOM canva:\n      this.loadCanvasDOM(); //DataSet:\n\n      let dataSet = _utils_ReadECGData__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getDataSet(this.dataDICOMarrayBuffer); //Read data from dataSet:\n\n      let dataMg = _utils_ReadECGData__WEBPACK_IMPORTED_MODULE_1__[\"default\"].readData(dataSet); //Draw template:\n\n      let gridCanvas = new _draw_DrawGridCanvas__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.idView + this.nameView, dataMg); //Draw compatible:\n\n      switch (dataMg.sopClassUID) {\n        case _constants_Constants__WEBPACK_IMPORTED_MODULE_0__[\"default\"].SOP_CLASS_UIDS.HemodynamicWaveformStorage:\n          //Hemodynamic Waveform Storage\n          gridCanvas.drawGrid();\n          break;\n\n        case _constants_Constants__WEBPACK_IMPORTED_MODULE_0__[\"default\"].SOP_CLASS_UIDS.AmbulatoryECGWaveformStorage:\n          //Ambulatory\n          gridCanvas.drawNoCompatible();\n          break;\n\n        case _constants_Constants__WEBPACK_IMPORTED_MODULE_0__[\"default\"].SOP_CLASS_UIDS.GeneralECGWaveformStorage:\n          //General ECG Waveform Storage\n          gridCanvas.drawGrid();\n          break;\n\n        case _constants_Constants__WEBPACK_IMPORTED_MODULE_0__[\"default\"].SOP_CLASS_UIDS.Sop12LeadECGWaveformStorage:\n          //12-lead ECG Waveform Storage\n          gridCanvas.drawGrid();\n          break;\n\n        default:\n          gridCanvas.drawNoCompatible();\n          console.log(\"Unsupported SOP Class UID: \" + sopClassUID);\n      }\n    } catch (err) {\n      gridCanvas.drawNoCompatible();\n    }\n  }\n  /**\r\n   * Create struct of view.\r\n   */\n\n\n  loadCanvasDOM() {\n    let view = \"\";\n    document.getElementById(this.idView).innerHTML = view;\n    view = '<canvas id=\"' + this.idView + this.nameView + '\"/>';\n    document.getElementById(this.idView).innerHTML = view;\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DicomECGViewer);\n\n//# sourceURL=webpack://$/./src/viewer/DicomECGViewer.js?");

/***/ }),

/***/ "./node_modules/dicom-parser/dist/dicomParser.min.js":
/*!***********************************************************!*\
  !*** ./node_modules/dicom-parser/dist/dicomParser.min.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*! dicom-parser - 1.8.12 - 2022-02-07 | (c) 2017 Chris Hafey | https://github.com/cornerstonejs/dicomParser */\n!function(e,t){ true?module.exports=t(__webpack_require__(/*! zlib */ \"?f915\")):0}(this,function(r){return a=[function(e,t){e.exports=r},function(e,t,s){\"use strict\";s.r(t),s.d(t,\"isStringVr\",function(){return d}),s.d(t,\"isPrivateTag\",function(){return f}),s.d(t,\"parsePN\",function(){return a}),s.d(t,\"parseTM\",function(){return n}),s.d(t,\"parseDA\",function(){return o}),s.d(t,\"explicitElementToString\",function(){return l}),s.d(t,\"explicitDataSetToJS\",function(){return u}),s.d(t,\"createJPEGBasicOffsetTable\",function(){return p}),s.d(t,\"parseDicomDataSetExplicit\",function(){return q}),s.d(t,\"parseDicomDataSetImplicit\",function(){return T}),s.d(t,\"readFixedString\",function(){return b}),s.d(t,\"alloc\",function(){return k}),s.d(t,\"version\",function(){return L}),s.d(t,\"bigEndianByteArrayParser\",function(){return N}),s.d(t,\"ByteStream\",function(){return J}),s.d(t,\"sharedCopy\",function(){return j}),s.d(t,\"DataSet\",function(){return w}),s.d(t,\"findAndSetUNElementLength\",function(){return y}),s.d(t,\"findEndOfEncapsulatedElement\",function(){return g}),s.d(t,\"findItemDelimitationItemAndSetElementLength\",function(){return x}),s.d(t,\"littleEndianByteArrayParser\",function(){return M}),s.d(t,\"parseDicom\",function(){return V}),s.d(t,\"readDicomElementExplicit\",function(){return B}),s.d(t,\"readDicomElementImplicit\",function(){return A}),s.d(t,\"readEncapsulatedImageFrame\",function(){return W}),s.d(t,\"readEncapsulatedPixelData\",function(){return K}),s.d(t,\"readEncapsulatedPixelDataFromFragments\",function(){return _}),s.d(t,\"readPart10Header\",function(){return G}),s.d(t,\"readSequenceItemsExplicit\",function(){return I}),s.d(t,\"readSequenceItemsImplicit\",function(){return F}),s.d(t,\"readSequenceItem\",function(){return S}),s.d(t,\"readTag\",function(){return h});var r={AE:!0,AS:!0,AT:!1,CS:!0,DA:!0,DS:!0,DT:!0,FL:!1,FD:!1,IS:!0,LO:!0,LT:!0,OB:!1,OD:!1,OF:!1,OW:!1,PN:!0,SH:!0,SL:!1,SQ:!1,SS:!1,ST:!0,TM:!0,UI:!0,UL:!1,UN:void 0,UR:!0,US:!1,UT:!0},d=function(e){return r[e]},f=function(e){return parseInt(e[4],10)%2==1},a=function(e){if(void 0!==e){e=e.split(\"^\");return{familyName:e[0],givenName:e[1],middleName:e[2],prefix:e[3],suffix:e[4]}}};function n(e,t){if(2<=e.length){var r=parseInt(e.substring(0,2),10),a=4<=e.length?parseInt(e.substring(2,4),10):void 0,n=6<=e.length?parseInt(e.substring(4,6),10):void 0,i=8<=e.length?e.substring(7,13):void 0,i=i?parseInt(i,10)*Math.pow(10,6-i.length):void 0;if(t&&(isNaN(r)||void 0!==a&&isNaN(a)||void 0!==n&&isNaN(n)||void 0!==i&&isNaN(i)||r<0||23<r||a&&(a<0||59<a)||n&&(n<0||59<n)||i&&(i<0||999999<i)))throw\"invalid TM '\".concat(e,\"'\");return{hours:r,minutes:a,seconds:n,fractionalSeconds:i}}if(t)throw\"invalid TM '\".concat(e,\"'\")}function i(e,t,r){return!isNaN(r)&&(0<t&&t<=12&&0<e&&e<=function(e,t){switch(e){case 2:return t%4==0&&t%100||t%400==0?29:28;case 9:case 4:case 6:case 11:return 30;default:return 31}}(t,r))}function o(e,t){if(e&&8===e.length){var r=parseInt(e.substring(0,4),10),a=parseInt(e.substring(4,6),10),n=parseInt(e.substring(6,8),10);if(t&&!0!==i(n,a,r))throw\"invalid DA '\".concat(e,\"'\");return{year:r,month:a,day:n}}if(t)throw\"invalid DA '\".concat(e,\"'\")}function l(n,e){if(void 0===n||void 0===e)throw\"dicomParser.explicitElementToString: missing required parameters\";if(void 0===e.vr)throw\"dicomParser.explicitElementToString: cannot convert implicit element to string\";var t,r=e.vr,i=e.tag;function a(e,t){for(var r=\"\",a=0;a<e;a++)0!==a&&(r+=\"/\"),r+=t.call(n,i,a).toString();return r}if(!0===d(r))t=n.string(i);else{if(\"AT\"===r){var o=n.uint32(i);return void 0===o?void 0:\"x\".concat((o=o<0?4294967295+o+1:o).toString(16).toUpperCase())}\"US\"===r?t=a(e.length/2,n.uint16):\"SS\"===r?t=a(e.length/2,n.int16):\"UL\"===r?t=a(e.length/4,n.uint32):\"SL\"===r?t=a(e.length/4,n.int32):\"FD\"===r?t=a(e.length/8,n.double):\"FL\"===r&&(t=a(e.length/4,n.float))}return t}function u(e,t){if(void 0===e)throw\"dicomParser.explicitDataSetToJS: missing required parameter dataSet\";t=t||{omitPrivateAttibutes:!0,maxElementLength:128};var r,a={};for(r in e.elements){var n=e.elements[r];if(!0!==t.omitPrivateAttibutes||!f(r))if(n.items){for(var i=[],o=0;o<n.items.length;o++)i.push(u(n.items[o].dataSet,t));a[r]=i}else{var s=void 0;n.length<t.maxElementLength&&(s=l(e,n)),a[r]=void 0!==s?s:{dataOffset:n.dataOffset,length:n.length}}}return a}function m(e,t){return 255===e.byteArray[t]&&217===e.byteArray[t+1]}function c(e,t,r){for(var a,n,i=r;i<t.fragments.length;i++)if(a=e,n=i,n=t.fragments[n],!(!m(a,n.position+n.length-2)&&!m(a,n.position+n.length-3)))return i}function p(e,t,r){if(void 0===e)throw\"dicomParser.createJPEGBasicOffsetTable: missing required parameter dataSet\";if(void 0===t)throw\"dicomParser.createJPEGBasicOffsetTable: missing required parameter pixelDataElement\";if(\"x7fe00010\"!==t.tag)throw\"dicomParser.createJPEGBasicOffsetTable: parameter 'pixelDataElement' refers to non pixel data tag (expected tag = x7fe00010'\";if(!0!==t.encapsulatedPixelData)throw\"dicomParser.createJPEGBasicOffsetTable: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data\";if(!0!==t.hadUndefinedLength)throw\"dicomParser.createJPEGBasicOffsetTable: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data\";if(void 0===t.basicOffsetTable)throw\"dicomParser.createJPEGBasicOffsetTable: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data\";if(void 0===t.fragments)throw\"dicomParser.createJPEGBasicOffsetTable: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data\";if(t.fragments.length<=0)throw\"dicomParser.createJPEGBasicOffsetTable: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data\";if(r&&r.length<=0)throw\"dicomParser.createJPEGBasicOffsetTable: parameter 'fragments' must not be zero length\";r=r||t.fragments;for(var a=[],n=0;;){a.push(t.fragments[n].offset);var i=c(e,t,n);if(void 0===i||i===t.fragments.length-1)return a;n=i+1}}function h(e){if(void 0===e)throw\"dicomParser.readTag: missing required parameter 'byteStream'\";var t=256*e.readUint16()*256,e=e.readUint16();return\"x\".concat(\"00000000\".concat((t+e).toString(16)).substr(-8))}function g(e,t,r){if(void 0===e)throw\"dicomParser.findEndOfEncapsulatedElement: missing required parameter 'byteStream'\";if(void 0===t)throw\"dicomParser.findEndOfEncapsulatedElement: missing required parameter 'element'\";if(t.encapsulatedPixelData=!0,t.basicOffsetTable=[],t.fragments=[],\"xfffee000\"!==h(e))throw\"dicomParser.findEndOfEncapsulatedElement: basic offset table not found\";for(var a=e.readUint32()/4,n=0;n<a;n++){var i=e.readUint32();t.basicOffsetTable.push(i)}for(var o=e.position;e.position<e.byteArray.length;){var s=h(e),d=e.readUint32();if(\"xfffee0dd\"===s)return e.seek(d),void(t.length=e.position-t.dataOffset);if(\"xfffee000\"!==s)return r&&r.push(\"unexpected tag \".concat(s,\" while searching for end of pixel data element with undefined length\")),d>e.byteArray.length-e.position&&(d=e.byteArray.length-e.position),t.fragments.push({offset:e.position-o-8,position:e.position,length:d}),e.seek(d),void(t.length=e.position-t.dataOffset);t.fragments.push({offset:e.position-o-8,position:e.position,length:d}),e.seek(d)}r&&r.push(\"pixel data element \".concat(t.tag,\" missing sequence delimiter tag xfffee0dd\"))}function y(e,t){if(void 0===e)throw\"dicomParser.findAndSetUNElementLength: missing required parameter 'byteStream'\";for(var r=e.byteArray.length-8;e.position<=r;)if(65534===e.readUint16()){var a=e.readUint16();if(57565===a)return 0!==e.readUint32()&&e.warnings(\"encountered non zero length following item delimiter at position \".concat(e.position-4,\" while reading element of undefined length with tag \").concat(t.tag)),void(t.length=e.position-t.dataOffset)}t.length=e.byteArray.length-t.dataOffset,e.seek(e.byteArray.length-e.position)}function b(e,t,r){if(r<0)throw\"dicomParser.readFixedString - length cannot be less than 0\";if(t+r>e.length)throw\"dicomParser.readFixedString: attempt to read past end of buffer\";for(var a,n=\"\",i=0;i<r;i++){if(0===(a=e[t+i]))return t+=r,n;n+=String.fromCharCode(a)}return n}function v(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function P(e,t){return void 0!==e.parser?e.parser:t}var w=function(){function a(e,t,r){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,a),this.byteArrayParser=e,this.byteArray=t,this.elements=r}var e,t,r;return e=a,(t=[{key:\"uint16\",value:function(e,t){e=this.elements[e];if(t=void 0!==t?t:0,e&&0!==e.length)return P(e,this.byteArrayParser).readUint16(this.byteArray,e.dataOffset+2*t)}},{key:\"int16\",value:function(e,t){e=this.elements[e];if(t=void 0!==t?t:0,e&&0!==e.length)return P(e,this.byteArrayParser).readInt16(this.byteArray,e.dataOffset+2*t)}},{key:\"uint32\",value:function(e,t){e=this.elements[e];if(t=void 0!==t?t:0,e&&0!==e.length)return P(e,this.byteArrayParser).readUint32(this.byteArray,e.dataOffset+4*t)}},{key:\"int32\",value:function(e,t){e=this.elements[e];if(t=void 0!==t?t:0,e&&0!==e.length)return P(e,this.byteArrayParser).readInt32(this.byteArray,e.dataOffset+4*t)}},{key:\"float\",value:function(e,t){e=this.elements[e];if(t=void 0!==t?t:0,e&&0!==e.length)return P(e,this.byteArrayParser).readFloat(this.byteArray,e.dataOffset+4*t)}},{key:\"double\",value:function(e,t){e=this.elements[e];if(t=void 0!==t?t:0,e&&0!==e.length)return P(e,this.byteArrayParser).readDouble(this.byteArray,e.dataOffset+8*t)}},{key:\"numStringValues\",value:function(e){e=this.elements[e];if(e&&0<e.length){e=b(this.byteArray,e.dataOffset,e.length).match(/\\\\/g);return null===e?1:e.length+1}}},{key:\"string\",value:function(e,t){e=this.elements[e];if(e&&e.Value)return e.Value;if(e&&0<e.length){e=b(this.byteArray,e.dataOffset,e.length);return 0<=t?e.split(\"\\\\\")[t].trim():e.trim()}}},{key:\"text\",value:function(e,t){e=this.elements[e];if(e&&0<e.length){e=b(this.byteArray,e.dataOffset,e.length);return 0<=t?e.split(\"\\\\\")[t].replace(/ +$/,\"\"):e.replace(/ +$/,\"\")}}},{key:\"floatString\",value:function(e,t){var r=this.elements[e];if(r&&0<r.length){t=this.string(e,t=void 0!==t?t:0);if(void 0!==t)return parseFloat(t)}}},{key:\"intString\",value:function(e,t){var r=this.elements[e];if(r&&0<r.length){t=this.string(e,t=void 0!==t?t:0);if(void 0!==t)return parseInt(t)}}},{key:\"attributeTag\",value:function(e){var t=this.elements[e];if(t&&4===t.length){var r=P(t,this.byteArrayParser).readUint16,e=this.byteArray,t=t.dataOffset;return\"x\".concat(\"00000000\".concat((256*r(e,t)*256+r(e,t+2)).toString(16)).substr(-8))}}}])&&v(e.prototype,t),r&&v(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),a}();function x(e,t){if(void 0===e)throw\"dicomParser.readDicomElementImplicit: missing required parameter 'byteStream'\";for(var r=e.byteArray.length-8;e.position<=r;)if(65534===e.readUint16()){var a=e.readUint16();if(57357===a)return 0!==e.readUint32()&&e.warnings(\"encountered non zero length following item delimiter at position \".concat(e.position-4,\" while reading element of undefined length with tag \").concat(t.tag)),void(t.length=e.position-t.dataOffset)}t.length=e.byteArray.length-t.dataOffset,e.seek(e.byteArray.length-e.position)}var E=function(e,t,r){if(void 0!==r)return\"SQ\"===r(e.tag);if(t.position+4<=t.byteArray.length){e=h(t);return t.seek(-4),\"xfffee000\"===e||\"xfffee0dd\"===e}return t.warnings.push(\"eof encountered before finding sequence item tag or sequence delimiter tag in peeking to determine VR\"),!1};function A(e,t,r){if(void 0===e)throw\"dicomParser.readDicomElementImplicit: missing required parameter 'byteStream'\";var a={tag:h(e),length:e.readUint32(),dataOffset:e.position};return 4294967295===a.length&&(a.hadUndefinedLength=!0),a.tag===t||(E(a,e,r)&&!f(a.tag)?F(e,a):a.hadUndefinedLength?x(e,a):e.seek(a.length)),a}function S(e){if(void 0===e)throw\"dicomParser.readSequenceItem: missing required parameter 'byteStream'\";var t={tag:h(e),length:e.readUint32(),dataOffset:e.position};if(\"xfffee000\"!==t.tag)throw\"dicomParser.readSequenceItem: item tag (FFFE,E000) not found at offset \".concat(e.position);return t}function D(e,t){var r=S(e);return 4294967295===r.length?(r.hadUndefinedLength=!0,r.dataSet=function(e,t){for(var r={};e.position<e.byteArray.length;){var a=A(e,void 0,t);if(\"xfffee00d\"===(r[a.tag]=a).tag)return new w(e.byteArrayParser,e.byteArray,r)}return e.warnings.push(\"eof encountered before finding sequence item delimiter in sequence item of undefined length\"),new w(e.byteArrayParser,e.byteArray,r)}(e,t),r.length=e.position-r.dataOffset):(r.dataSet=new w(e.byteArrayParser,e.byteArray,{}),T(r.dataSet,e,e.position+r.length,{vrCallback:t})),r}function F(e,t,r){if(void 0===e)throw\"dicomParser.readSequenceItemsImplicit: missing required parameter 'byteStream'\";if(void 0===t)throw\"dicomParser.readSequenceItemsImplicit: missing required parameter 'element'\";t.items=[],(4294967295===t.length?function(e,t,r){for(;e.position+4<=e.byteArray.length;){var a=h(e);if(e.seek(-4),\"xfffee0dd\"===a)return t.length=e.position-t.dataOffset,e.seek(8);a=D(e,r);t.items.push(a)}e.warnings.push(\"eof encountered before finding sequence delimiter in sequence of undefined length\"),t.length=e.byteArray.length-t.dataOffset}:function(e,t,r){for(var a=t.dataOffset+t.length;e.position<a;){var n=D(e,r);t.items.push(n)}})(e,t,r)}function O(e,t){var r=S(e);return 4294967295===r.length?(r.hadUndefinedLength=!0,r.dataSet=function(e,t){for(var r={};e.position<e.byteArray.length;){var a=B(e,t);if(\"xfffee00d\"===(r[a.tag]=a).tag)return new w(e.byteArrayParser,e.byteArray,r)}return t.push(\"eof encountered before finding item delimiter tag while reading sequence item of undefined length\"),new w(e.byteArrayParser,e.byteArray,r)}(e,t),r.length=e.position-r.dataOffset):(r.dataSet=new w(e.byteArrayParser,e.byteArray,{}),q(r.dataSet,e,e.position+r.length)),r}function I(e,t,r){if(void 0===e)throw\"dicomParser.readSequenceItemsExplicit: missing required parameter 'byteStream'\";if(void 0===t)throw\"dicomParser.readSequenceItemsExplicit: missing required parameter 'element'\";t.items=[],(4294967295===t.length?function(e,t,r){for(;e.position+4<=e.byteArray.length;){var a=h(e);if(e.seek(-4),\"xfffee0dd\"===a)return t.length=e.position-t.dataOffset,e.seek(8);a=O(e,r);t.items.push(a)}r.push(\"eof encountered before finding sequence delimitation tag while reading sequence of undefined length\"),t.length=e.position-t.dataOffset}:function(e,t,r){for(var a=t.dataOffset+t.length;e.position<a;){var n=O(e,r);t.items.push(n)}})(e,t,r)}var U=function(e){return\"OB\"===e||\"OD\"===e||\"OL\"===e||\"OW\"===e||\"SQ\"===e||\"OF\"===e||\"UC\"===e||\"UR\"===e||\"UT\"===e||\"UN\"===e?4:2};function B(e,t,r){if(void 0===e)throw\"dicomParser.readDicomElementExplicit: missing required parameter 'byteStream'\";var a={tag:h(e),vr:e.readFixedString(2)};return 2===U(a.vr)?a.length=e.readUint16():(e.seek(2),a.length=e.readUint32()),a.dataOffset=e.position,4294967295===a.length&&(a.hadUndefinedLength=!0),a.tag===r||(\"SQ\"===a.vr?I(e,a,t):4294967295===a.length?\"x7fe00010\"===a.tag?g(e,a,t):(\"UN\"===a.vr?F:x)(e,a):e.seek(a.length)),a}function q(e,t,r){var a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{};if(r=void 0===r?t.byteArray.length:r,void 0===t)throw\"dicomParser.parseDicomDataSetExplicit: missing required parameter 'byteStream'\";if(r<t.position||r>t.byteArray.length)throw\"dicomParser.parseDicomDataSetExplicit: invalid value for parameter 'maxP osition'\";for(var n=e.elements;t.position<r;){var i=B(t,e.warnings,a.untilTag);if((n[i.tag]=i).tag===a.untilTag)return}if(t.position>r)throw\"dicomParser:parseDicomDataSetExplicit: buffer overrun\"}function T(e,t,r){var a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{};if(r=void 0===r?e.byteArray.length:r,void 0===t)throw\"dicomParser.parseDicomDataSetImplicit: missing required parameter 'byteStream'\";if(r<t.position||r>t.byteArray.length)throw\"dicomParser.parseDicomDataSetImplicit: invalid value for parameter 'maxPosition'\";for(var n=e.elements;t.position<r;){var i=A(t,a.untilTag,a.vrCallback);if((n[i.tag]=i).tag===a.untilTag)return}}function k(e,t){if(\"undefined\"!=typeof Buffer&&e instanceof Buffer)return Buffer.alloc(t);if(e instanceof Uint8Array)return new Uint8Array(t);throw\"dicomParser.alloc: unknown type for byteArray\"}var L=\"1.8.12\",N={readUint16:function(e,t){if(t<0)throw\"bigEndianByteArrayParser.readUint16: position cannot be less than 0\";if(t+2>e.length)throw\"bigEndianByteArrayParser.readUint16: attempt to read past end of buffer\";return(e[t]<<8)+e[t+1]},readInt16:function(e,t){if(t<0)throw\"bigEndianByteArrayParser.readInt16: position cannot be less than 0\";if(t+2>e.length)throw\"bigEndianByteArrayParser.readInt16: attempt to read past end of buffer\";t=(e[t]<<8)+e[t+1];return t=32768&t?t-65535-1:t},readUint32:function(e,t){if(t<0)throw\"bigEndianByteArrayParser.readUint32: position cannot be less than 0\";if(t+4>e.length)throw\"bigEndianByteArrayParser.readUint32: attempt to read past end of buffer\";return 256*(256*(256*e[t]+e[t+1])+e[t+2])+e[t+3]},readInt32:function(e,t){if(t<0)throw\"bigEndianByteArrayParser.readInt32: position cannot be less than 0\";if(t+4>e.length)throw\"bigEndianByteArrayParser.readInt32: attempt to read past end of buffer\";return(e[t]<<24)+(e[t+1]<<16)+(e[t+2]<<8)+e[t+3]},readFloat:function(e,t){if(t<0)throw\"bigEndianByteArrayParser.readFloat: position cannot be less than 0\";if(t+4>e.length)throw\"bigEndianByteArrayParser.readFloat: attempt to read past end of buffer\";var r=new Uint8Array(4);return r[3]=e[t],r[2]=e[t+1],r[1]=e[t+2],r[0]=e[t+3],new Float32Array(r.buffer)[0]},readDouble:function(e,t){if(t<0)throw\"bigEndianByteArrayParser.readDouble: position cannot be less than 0\";if(t+8>e.length)throw\"bigEndianByteArrayParser.readDouble: attempt to read past end of buffer\";var r=new Uint8Array(8);return r[7]=e[t],r[6]=e[t+1],r[5]=e[t+2],r[4]=e[t+3],r[3]=e[t+4],r[2]=e[t+5],r[1]=e[t+6],r[0]=e[t+7],new Float64Array(r.buffer)[0]}};function j(e,t,r){if(\"undefined\"!=typeof Buffer&&e instanceof Buffer)return e.slice(t,t+r);if(e instanceof Uint8Array)return new Uint8Array(e.buffer,e.byteOffset+t,r);throw\"dicomParser.from: unknown type for byteArray\"}function C(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var J=function(){function a(e,t,r){if(!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,a),void 0===e)throw\"dicomParser.ByteStream: missing required parameter 'byteArrayParser'\";if(void 0===t)throw\"dicomParser.ByteStream: missing required parameter 'byteArray'\";if(t instanceof Uint8Array==!1&&(\"undefined\"==typeof Buffer||t instanceof Buffer==!1))throw\"dicomParser.ByteStream: parameter byteArray is not of type Uint8Array or Buffer\";if(r<0)throw\"dicomParser.ByteStream: parameter 'position' cannot be less than 0\";if(r>=t.length)throw\"dicomParser.ByteStream: parameter 'position' cannot be greater than or equal to 'byteArray' length\";this.byteArrayParser=e,this.byteArray=t,this.position=r||0,this.warnings=[]}var e,t,r;return e=a,(t=[{key:\"seek\",value:function(e){if(this.position+e<0)throw\"dicomParser.ByteStream.prototype.seek: cannot seek to position < 0\";this.position+=e}},{key:\"readByteStream\",value:function(e){if(this.position+e>this.byteArray.length)throw\"dicomParser.ByteStream.prototype.readByteStream: readByteStream - buffer overread\";var t=j(this.byteArray,this.position,e);return this.position+=e,new a(this.byteArrayParser,t)}},{key:\"getSize\",value:function(){return this.byteArray.length}},{key:\"readUint16\",value:function(){var e=this.byteArrayParser.readUint16(this.byteArray,this.position);return this.position+=2,e}},{key:\"readUint32\",value:function(){var e=this.byteArrayParser.readUint32(this.byteArray,this.position);return this.position+=4,e}},{key:\"readFixedString\",value:function(e){var t=b(this.byteArray,this.position,e);return this.position+=e,t}}])&&C(e.prototype,t),r&&C(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),a}(),M={readUint16:function(e,t){if(t<0)throw\"littleEndianByteArrayParser.readUint16: position cannot be less than 0\";if(t+2>e.length)throw\"littleEndianByteArrayParser.readUint16: attempt to read past end of buffer\";return e[t]+256*e[t+1]},readInt16:function(e,t){if(t<0)throw\"littleEndianByteArrayParser.readInt16: position cannot be less than 0\";if(t+2>e.length)throw\"littleEndianByteArrayParser.readInt16: attempt to read past end of buffer\";t=e[t]+(e[t+1]<<8);return t=32768&t?t-65535-1:t},readUint32:function(e,t){if(t<0)throw\"littleEndianByteArrayParser.readUint32: position cannot be less than 0\";if(t+4>e.length)throw\"littleEndianByteArrayParser.readUint32: attempt to read past end of buffer\";return e[t]+256*e[t+1]+256*e[t+2]*256+256*e[t+3]*256*256},readInt32:function(e,t){if(t<0)throw\"littleEndianByteArrayParser.readInt32: position cannot be less than 0\";if(t+4>e.length)throw\"littleEndianByteArrayParser.readInt32: attempt to read past end of buffer\";return e[t]+(e[t+1]<<8)+(e[t+2]<<16)+(e[t+3]<<24)},readFloat:function(e,t){if(t<0)throw\"littleEndianByteArrayParser.readFloat: position cannot be less than 0\";if(t+4>e.length)throw\"littleEndianByteArrayParser.readFloat: attempt to read past end of buffer\";var r=new Uint8Array(4);return r[0]=e[t],r[1]=e[t+1],r[2]=e[t+2],r[3]=e[t+3],new Float32Array(r.buffer)[0]},readDouble:function(e,t){if(t<0)throw\"littleEndianByteArrayParser.readDouble: position cannot be less than 0\";if(t+8>e.length)throw\"littleEndianByteArrayParser.readDouble: attempt to read past end of buffer\";var r=new Uint8Array(8);return r[0]=e[t],r[1]=e[t+1],r[2]=e[t+2],r[3]=e[t+3],r[4]=e[t+4],r[5]=e[t+5],r[6]=e[t+6],r[7]=e[t+7],new Float64Array(r.buffer)[0]}};function G(e){var i=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};if(void 0===e)throw\"dicomParser.readPart10Header: missing required parameter 'byteArray'\";var o=i.TransferSyntaxUID,s=new J(M,e);return function(){var e=function(){if(s.getSize()<=132&&o)return!1;if(s.seek(128),\"DICM\"===s.readFixedString(4))return!0;if(!(i||{}).TransferSyntaxUID)throw\"dicomParser.readPart10Header: DICM prefix not found at location 132 - this is not a valid DICOM P10 file.\";return s.seek(0),!1}(),t=[],r={};if(!e)return s.position=0,{elements:{x00020010:{tag:\"x00020010\",vr:\"UI\",Value:o}},warnings:t};for(;s.position<s.byteArray.length;){var a=s.position,n=B(s,t);if(\"x0002ffff\"<n.tag){s.position=a;break}n.parser=M,r[n.tag]=n}return(e=new w(s.byteArrayParser,s.byteArray,r)).warnings=s.warnings,e.position=s.position,e}()}var z=\"1.2.840.10008.1.2.2\";function V(i){var o=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};if(void 0===i)throw new Error(\"dicomParser.parseDicom: missing required parameter 'byteArray'\");var e,a=function(e){if(void 0===e.elements.x00020010)throw new Error(\"dicomParser.parseDicom: missing required meta header attribute 0002,0010\");e=e.elements.x00020010;return e&&e.Value||b(i,e.dataOffset,e.length)};function t(t){var e=a(t),r=\"1.2.840.10008.1.2\"!==e,e=function(e,t){var r=\"[object process]\"===Object.prototype.toString.call(\"undefined\"!=typeof process?process:0);if(\"1.2.840.10008.1.2.1.99\"!==e)return new J(e===z?N:M,i,t);if(o&&o.inflater){e=o.inflater(i,t);return new J(M,e,0)}if(!0==r){var a=s(0),n=j(i,t,i.length-t),a=a.inflateRawSync(n),n=k(i,a.length+t);return i.copy(n,0,0,t),a.copy(n,t),new J(M,n,0)}if(\"undefined\"==typeof pako)throw\"dicomParser.parseDicom: no inflater available to handle deflate transfer syntax\";return a=i.slice(t),n=pako.inflateRaw(a),(a=k(i,n.length+t)).set(i.slice(0,t),0),a.set(n,t),new J(M,a,0)}(e,t.position),t=new w(e.byteArrayParser,e.byteArray,{});t.warnings=e.warnings;try{(r?q:T)(t,e,e.byteArray.length,o)}catch(e){throw{exception:e,dataSet:t}}return t}return function(e,t){for(var r in e.elements)e.elements.hasOwnProperty(r)&&(t.elements[r]=e.elements[r]);return void 0!==e.warnings&&(t.warnings=e.warnings.concat(t.warnings)),t}(e=G(i,o),t(e))}var R=function(e,t,r){for(var a=0,n=t;n<t+r;n++)a+=e[n].length;return a};function _(e,t,r,a,n){if(n=n||t.fragments,void 0===e)throw\"dicomParser.readEncapsulatedPixelDataFromFragments: missing required parameter 'dataSet'\";if(void 0===t)throw\"dicomParser.readEncapsulatedPixelDataFromFragments: missing required parameter 'pixelDataElement'\";if(void 0===r)throw\"dicomParser.readEncapsulatedPixelDataFromFragments: missing required parameter 'startFragmentIndex'\";if(void 0===(a=a||1))throw\"dicomParser.readEncapsulatedPixelDataFromFragments: missing required parameter 'numFragments'\";if(\"x7fe00010\"!==t.tag)throw\"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'pixelDataElement' refers to non pixel data tag (expected tag = x7fe00010\";if(!0!==t.encapsulatedPixelData)throw\"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data\";if(!0!==t.hadUndefinedLength)throw\"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data\";if(void 0===t.basicOffsetTable)throw\"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data\";if(void 0===t.fragments)throw\"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data\";if(t.fragments.length<=0)throw\"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data\";if(r<0)throw\"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'startFragmentIndex' must be >= 0\";if(r>=t.fragments.length)throw\"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'startFragmentIndex' must be < number of fragments\";if(a<1)throw\"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'numFragments' must be > 0\";if(r+a>t.fragments.length)throw\"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'startFragment' + 'numFragments' < number of fragments\";var i=new J(e.byteArrayParser,e.byteArray,t.dataOffset),t=S(i);if(\"xfffee000\"!==t.tag)throw\"dicomParser.readEncapsulatedPixelData: missing basic offset table xfffee000\";i.seek(t.length);var o=i.position;if(1===a)return j(i.byteArray,o+n[r].offset+8,n[r].length);for(var t=R(n,r,a),s=k(i.byteArray,t),d=0,f=r;f<r+a;f++)for(var l=o+n[f].offset+8,u=0;u<n[f].length;u++)s[d++]=i.byteArray[l++];return s}var H=function(e,t){for(var r=0;r<e.length;r++)if(e[r].offset===t)return r},Q=function(e,t,r,a){if(e===t.length-1)return r.length-a;for(var n=t[e+1],i=a+1;i<r.length;i++)if(r[i].offset===n)return i-a;throw\"dicomParser.calculateNumberOfFragmentsForFrame: could not find fragment with offset matching basic offset table\"};function W(e,t,r,a,n){if(a=a||t.basicOffsetTable,n=n||t.fragments,void 0===e)throw\"dicomParser.readEncapsulatedImageFrame: missing required parameter 'dataSet'\";if(void 0===t)throw\"dicomParser.readEncapsulatedImageFrame: missing required parameter 'pixelDataElement'\";if(void 0===r)throw\"dicomParser.readEncapsulatedImageFrame: missing required parameter 'frameIndex'\";if(void 0===a)throw\"dicomParser.readEncapsulatedImageFrame: parameter 'pixelDataElement' does not have basicOffsetTable\";if(\"x7fe00010\"!==t.tag)throw\"dicomParser.readEncapsulatedImageFrame: parameter 'pixelDataElement' refers to non pixel data tag (expected tag = x7fe00010)\";if(!0!==t.encapsulatedPixelData)throw\"dicomParser.readEncapsulatedImageFrame: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data\";if(!0!==t.hadUndefinedLength)throw\"dicomParser.readEncapsulatedImageFrame: parameter 'pixelDataElement' refers to pixel data element that does not have undefined length\";if(void 0===t.fragments)throw\"dicomParser.readEncapsulatedImageFrame: parameter 'pixelDataElement' refers to pixel data element that does not have fragments\";if(0===a.length)throw\"dicomParser.readEncapsulatedImageFrame: basicOffsetTable has zero entries\";if(r<0)throw\"dicomParser.readEncapsulatedImageFrame: parameter 'frameIndex' must be >= 0\";if(r>=a.length)throw\"dicomParser.readEncapsulatedImageFrame: parameter 'frameIndex' must be < basicOffsetTable.length\";var i=a[r],i=H(n,i);if(void 0===i)throw\"dicomParser.readEncapsulatedImageFrame: unable to find fragment that matches basic offset table entry\";return _(e,t,i,Q(r,a,n,i),n)}var $=!1;function K(e,t,r){if($||($=!0,console&&console.log&&console.log(\"WARNING: dicomParser.readEncapsulatedPixelData() has been deprecated\")),void 0===e)throw\"dicomParser.readEncapsulatedPixelData: missing required parameter 'dataSet'\";if(void 0===t)throw\"dicomParser.readEncapsulatedPixelData: missing required parameter 'element'\";if(void 0===r)throw\"dicomParser.readEncapsulatedPixelData: missing required parameter 'frame'\";if(\"x7fe00010\"!==t.tag)throw\"dicomParser.readEncapsulatedPixelData: parameter 'element' refers to non pixel data tag (expected tag = x7fe00010)\";if(!0!==t.encapsulatedPixelData)throw\"dicomParser.readEncapsulatedPixelData: parameter 'element' refers to pixel data element that does not have encapsulated pixel data\";if(!0!==t.hadUndefinedLength)throw\"dicomParser.readEncapsulatedPixelData: parameter 'element' refers to pixel data element that does not have encapsulated pixel data\";if(void 0===t.basicOffsetTable)throw\"dicomParser.readEncapsulatedPixelData: parameter 'element' refers to pixel data element that does not have encapsulated pixel data\";if(void 0===t.fragments)throw\"dicomParser.readEncapsulatedPixelData: parameter 'element' refers to pixel data element that does not have encapsulated pixel data\";if(r<0)throw\"dicomParser.readEncapsulatedPixelData: parameter 'frame' must be >= 0\";return 0!==t.basicOffsetTable.length?W(e,t,r):_(e,t,0,t.fragments.length)}t.default={isStringVr:d,isPrivateTag:f,parsePN:a,parseTM:n,parseDA:o,explicitElementToString:l,explicitDataSetToJS:u,createJPEGBasicOffsetTable:p,parseDicomDataSetExplicit:q,parseDicomDataSetImplicit:T,readFixedString:b,alloc:k,version:L,bigEndianByteArrayParser:N,ByteStream:J,sharedCopy:j,DataSet:w,findAndSetUNElementLength:y,findEndOfEncapsulatedElement:g,findItemDelimitationItemAndSetElementLength:x,littleEndianByteArrayParser:M,parseDicom:V,readDicomElementExplicit:B,readDicomElementImplicit:A,readEncapsulatedImageFrame:W,readEncapsulatedPixelData:K,readEncapsulatedPixelDataFromFragments:_,readPart10Header:G,readSequenceItemsExplicit:I,readSequenceItemsImplicit:F,readSequenceItem:S,readTag:h,LEI:\"1.2.840.10008.1.2\",LEE:\"1.2.840.10008.1.2.1\"}}],i={},n.m=a,n.c=i,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var a in t)n.d(r,a,function(e){return t[e]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=1);function n(e){if(i[e])return i[e].exports;var t=i[e]={i:e,l:!1,exports:{}};return a[e].call(t.exports,t,t.exports,n),t.l=!0,t.exports}var a,i});\n//# sourceMappingURL=dicomParser.min.js.map\n\n//# sourceURL=webpack://$/./node_modules/dicom-parser/dist/dicomParser.min.js?");

/***/ }),

/***/ "?f915":
/*!**********************!*\
  !*** zlib (ignored) ***!
  \**********************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://$/zlib_(ignored)?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});